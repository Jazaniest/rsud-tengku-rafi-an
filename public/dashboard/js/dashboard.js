document.addEventListener('DOMContentLoaded', async () => {
  const token = localStorage.getItem('accessToken');
  // console.log('berikut token yang tersimpan di dashboard.js : ', token);
  if (!token) {
    alert('anda tidak dapat melakukan aksi ini !');
    window.location.href = '../../login-form/index.html';
    return;
  }

  try {
    const profileRes = await fetchWithAuth('/api/auth/profile');
    if (!profileRes.ok) throw new Error('Gagal mengambil data profil');
    const profile = await profileRes.json();

    document.getElementById('username').textContent = profile.username;
    document.getElementById('role').textContent = profile.role;
    

    //optimasi bagian ini kedepannya, terlalu banyak pemakaian kode berulang
    const logbookContainer = document.getElementById('logbook');
    if (profile.role === 'Staff') {
      logbookContainer.innerHTML = `
        <li class="nav-item profile-mobile"><a class="nav-link" href="profile/profile.html">My profile</a></li>
        <li class="nav-item profile-mobile"><a class="nav-link" href="logbook.html">Logbook</a></li>
        <li class="nav-item mr-3 profile-desktop" style="position: relative; width:80px; height:80px">
          <button id="profileBtn" class="btn p-0 border-0 bg-transparent">
            <img src="img/profile-icon.png" alt="profile" style="width: 180%; height:180%">
          </button>

          <div class="profile-dropdown" id="profileDropdown">
            <div class="input-profile">
              <button class="value" id="profile-button">
                <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" data-name="Layer 2"><path fill="#7D8590" d="m1.5 13v1a.5.5 0 0 0 .3379.4731 18.9718 18.9718 0 0 0 6.1621 1.0269 18.9629 18.9629 0 0 0 6.1621-1.0269.5.5 0 0 0 .3379-.4731v-1a6.5083 6.5083 0 0 0 -4.461-6.1676 3.5 3.5 0 1 0 -4.078 0 6.5083 6.5083 0 0 0 -4.461 6.1676zm4-9a2.5 2.5 0 1 1 2.5 2.5 2.5026 2.5026 0 0 1 -2.5-2.5zm2.5 3.5a5.5066 5.5066 0 0 1 5.5 5.5v.6392a18.08 18.08 0 0 1 -11 0v-.6392a5.5066 5.5066 0 0 1 5.5-5.5z"></path></svg>
                My profile
              </button>
              <button class="value" id="logbook-button">
                <svg viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg"><path fill="#7D8590" d="m109.9 20.63a6.232 6.232 0 0 0 -8.588-.22l-57.463 51.843c-.012.011-.02.024-.031.035s-.023.017-.034.027l-4.721 4.722a1.749 1.749 0 0 0 0 2.475l.341.342-3.16 3.16a8 8 0 0 0 -1.424 1.967 11.382 11.382 0 0 0 -12.055 10.609c-.006.036-.011.074-.015.111a5.763 5.763 0 0 1 -4.928 5.41 1.75 1.75 0 0 0 -.844 3.14c4.844 3.619 9.4 4.915 13.338 4.915a17.14 17.14 0 0 0 11.738-4.545l.182-.167a11.354 11.354 0 0 0 3.348-8.081c0-.225-.02-.445-.032-.667a8.041 8.041 0 0 0 1.962-1.421l3.16-3.161.342.342a1.749 1.749 0 0 0 2.475 0l4.722-4.722c.011-.011.018-.025.029-.036s.023-.018.033-.029l51.844-57.46a6.236 6.236 0 0 0 -.219-8.589zm-70.1 81.311-.122.111c-.808.787-7.667 6.974-17.826 1.221a9.166 9.166 0 0 0 4.36-7.036 1.758 1.758 0 0 0 .036-.273 7.892 7.892 0 0 1 9.122-7.414c.017.005.031.014.048.019a1.717 1.717 0 0 0 .379.055 7.918 7.918 0 0 1 4 13.317zm5.239-10.131c-.093.093-.194.176-.293.26a11.459 11.459 0 0 0 -6.289-6.286c.084-.1.167-.2.261-.3l3.161-3.161 6.321 6.326zm7.214-4.057-9.479-9.479 2.247-2.247 9.479 9.479zm55.267-60.879-50.61 56.092-9.348-9.348 56.092-50.61a2.737 2.737 0 0 1 3.866 3.866z"></path></svg>
                Logbook
              </button>
              <!-- <button class="value">
                <svg id="Line" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path fill="#7D8590" id="XMLID_1646_" d="m17.074 30h-2.148c-1.038 0-1.914-.811-1.994-1.846l-.125-1.635c-.687-.208-1.351-.484-1.985-.824l-1.246 1.067c-.788.677-1.98.631-2.715-.104l-1.52-1.52c-.734-.734-.78-1.927-.104-2.715l1.067-1.246c-.34-.635-.616-1.299-.824-1.985l-1.634-.125c-1.035-.079-1.846-.955-1.846-1.993v-2.148c0-1.038.811-1.914 1.846-1.994l1.635-.125c.208-.687.484-1.351.824-1.985l-1.068-1.247c-.676-.788-.631-1.98.104-2.715l1.52-1.52c.734-.734 1.927-.779 2.715-.104l1.246 1.067c.635-.34 1.299-.616 1.985-.824l.125-1.634c.08-1.034.956-1.845 1.994-1.845h2.148c1.038 0 1.914.811 1.994 1.846l.125 1.635c.687.208 1.351.484 1.985.824l1.246-1.067c.787-.676 1.98-.631 2.715.104l1.52 1.52c.734.734.78 1.927.104 2.715l-1.067 1.246c.34.635.616 1.299.824 1.985l1.634.125c1.035.079 1.846.955 1.846 1.993v2.148c0 1.038-.811 1.914-1.846 1.994l-1.635.125c-.208.687-.484 1.351-.824 1.985l1.067 1.246c.677.788.631 1.98-.104 2.715l-1.52 1.52c-.734.734-1.928.78-2.715.104l-1.246-1.067c-.635.34-1.299.616-1.985.824l-.125 1.634c-.079 1.035-.955 1.846-1.993 1.846zm-5.835-6.373c.848.53 1.768.912 2.734 1.135.426.099.739.462.772.898l.18 2.341 2.149-.001.18-2.34c.033-.437.347-.8.772-.898.967-.223 1.887-.604 2.734-1.135.371-.232.849-.197 1.181.089l1.784 1.529 1.52-1.52-1.529-1.784c-.285-.332-.321-.811-.089-1.181.53-.848.912-1.768 1.135-2.734.099-.426.462-.739.898-.772l2.341-.18h-.001v-2.148l-2.34-.18c-.437-.033-.8-.347-.898-.772-.223-.967-.604-1.887-1.135-2.734-.232-.37-.196-.849.089-1.181l1.529-1.784-1.52-1.52-1.784 1.529c-.332.286-.81.321-1.181.089-.848-.53-1.768-.912-2.734-1.135-.426-.099-.739-.462-.772-.898l-.18-2.341-2.148.001-.18 2.34c-.033.437-.347.8-.772.898-.967.223-1.887.604-2.734 1.135-.37.232-.849.197-1.181-.089l-1.785-1.529-1.52 1.52 1.529 1.784c.285.332.321.811.089 1.181-.53.848-.912 1.768-1.135 2.734-.099.426-.462.739-.898.772l-2.341.18.002 2.148 2.34.18c.437.033.8.347.898.772.223.967.604 1.887 1.135 2.734.232.37.196.849-.089 1.181l-1.529 1.784 1.52 1.52 1.784-1.529c.332-.287.813-.32 1.18-.089z"></path><path id="XMLID_1645_" fill="#7D8590" d="m16 23c-3.859 0-7-3.141-7-7s3.141-7 7-7 7 3.141 7 7-3.141 7-7 7zm0-12c-2.757 0-5 2.243-5 5s2.243 5 5 5 5-2.243 5-5-2.243-5-5-5z"></path></svg>
                Account
              </button> 
              <button class="value">
                <svg id="svg8" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><g id="layer1" transform="translate(-33.022 -30.617)"><path fill="#7D8590" id="path26276" d="m49.021 31.617c-2.673 0-4.861 2.188-4.861 4.861 0 1.606.798 3.081 1.873 3.834h-7.896c-1.7 0-3.098 1.401-3.098 3.1s1.399 3.098 3.098 3.098h4.377l.223 2.641s-1.764 8.565-1.764 8.566c-.438 1.642.55 3.355 2.191 3.795s3.327-.494 3.799-2.191l2.059-5.189 2.059 5.189c.44 1.643 2.157 2.631 3.799 2.191s2.63-2.153 2.191-3.795l-1.764-8.566.223-2.641h4.377c1.699 0 3.098-1.399 3.098-3.098s-1.397-3.1-3.098-3.1h-7.928c1.102-.771 1.904-2.228 1.904-3.834 0-2.672-2.189-4.861-4.862-4.861zm0 2c1.592 0 2.861 1.27 2.861 2.861 0 1.169-.705 2.214-1.789 2.652-.501.203-.75.767-.563 1.273l.463 1.254c.145.393.519.654.938.654h8.975c.626 0 1.098.473 1.098 1.1s-.471 1.098-1.098 1.098h-5.297c-.52 0-.952.398-.996.916l-.311 3.701c-.008.096-.002.191.018.285 0 0 1.813 8.802 1.816 8.82.162.604-.173 1.186-.777 1.348s-1.184-.173-1.346-.777c-.01-.037-3.063-7.76-3.063-7.76-.334-.842-1.525-.842-1.859 0 0 0-3.052 7.723-3.063 7.76-.162.604-.741.939-1.346.777s-.939-.743-.777-1.348c.004-.019 1.816-8.82 1.816-8.82.02-.094.025-.189.018-.285l-.311-3.701c-.044-.518-.477-.916-.996-.916h-5.297c-.627 0-1.098-.471-1.098-1.098s.472-1.1 1.098-1.1h8.975c.419 0 .793-.262.938-.654l.463-1.254c.188-.507-.062-1.07-.563-1.273-1.084-.438-1.789-1.483-1.789-2.652.001-1.591 1.271-2.861 2.862-2.861z"></path></g></svg>
                Accessibility
              </button>
              <button class="value">
                <svg fill="none" viewBox="0 0 24 25" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m11.9572 4.31201c-3.35401 0-6.00906 2.59741-6.00906 5.67742v3.29037c0 .1986-.05916.3927-.16992.5576l-1.62529 2.4193-.01077.0157c-.18701.2673-.16653.5113-.07001.6868.10031.1825.31959.3528.67282.3528h14.52603c.2546 0 .5013-.1515.6391-.3968.1315-.2343.1117-.4475-.0118-.6093-.0065-.0085-.0129-.0171-.0191-.0258l-1.7269-2.4194c-.121-.1695-.186-.3726-.186-.5809v-3.29037c0-1.54561-.6851-3.023-1.7072-4.00431-1.1617-1.01594-2.6545-1.67311-4.3019-1.67311zm-8.00906 5.67742c0-4.27483 3.64294-7.67742 8.00906-7.67742 2.2055 0 4.1606.88547 5.6378 2.18455.01.00877.0198.01774.0294.02691 1.408 1.34136 2.3419 3.34131 2.3419 5.46596v2.97007l1.5325 2.1471c.6775.8999.6054 1.9859.1552 2.7877-.4464.795-1.3171 1.4177-2.383 1.4177h-14.52603c-2.16218 0-3.55087-2.302-2.24739-4.1777l1.45056-2.1593zm4.05187 11.32257c0-.5523.44772-1 1-1h5.99999c.5523 0 1 .4477 1 1s-.4477 1-1 1h-5.99999c-.55228 0-1-.4477-1-1z" fill="#7D8590" fill-rule="evenodd"></path></svg>
                Notifications
              </button> --!>
            </div>
          </div>
        </li>
        <li class="nav-item profile-desktop">
          <button class="Btn-logout mt-3" id="logoutLink">
            <div class="sign">
              <svg viewBox="0 0 512 512">
                <path
                  d="M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z"
                ></path>
              </svg>
            </div>
            <div class="text">Logout</div>
          </button>
        </li>

        <li class="nav-item profile-mobile">
          <a class="nav-link" href="../login-form/index.html" id="logoutLink">Logout</a>
        </li>
      `;
    } else if (profile.role === 'super admin') {
      logbookContainer.innerHTML = `
        <li class="nav-item profile-mobile"><a class="nav-link" href="profile/profile.html">My profile</a></li>
        <li class="nav-item profile-mobile"><a class="nav-link" href="user.html">Data user</a></li>
        <li class="nav-item profile-mobile"><a class="nav-link" href="../login-form/register.html">Register user</a></li>
        <li class="nav-item mr-3 profile-desktop" style="position: relative; width:80px; height:80px">
          <button id="profileBtn" class="btn p-0 border-0 bg-transparent">
            <img src="img/profile-icon.png" alt="profile" style="width: 180%; height:180%">
          </button>

          <div class="profile-dropdown" id="profileDropdown">
            <div class="input-profile">
              <button class="value" id="profile-button">
                <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" data-name="Layer 2"><path fill="#7D8590" d="m1.5 13v1a.5.5 0 0 0 .3379.4731 18.9718 18.9718 0 0 0 6.1621 1.0269 18.9629 18.9629 0 0 0 6.1621-1.0269.5.5 0 0 0 .3379-.4731v-1a6.5083 6.5083 0 0 0 -4.461-6.1676 3.5 3.5 0 1 0 -4.078 0 6.5083 6.5083 0 0 0 -4.461 6.1676zm4-9a2.5 2.5 0 1 1 2.5 2.5 2.5026 2.5026 0 0 1 -2.5-2.5zm2.5 3.5a5.5066 5.5066 0 0 1 5.5 5.5v.6392a18.08 18.08 0 0 1 -11 0v-.6392a5.5066 5.5066 0 0 1 5.5-5.5z"></path></svg>
                My profile
              </button>
              <button class="value" id="user-data-button">
                <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" data-name="Layer 2"><path fill="#7D8590" d="m1.5 13v1a.5.5 0 0 0 .3379.4731 18.9718 18.9718 0 0 0 6.1621 1.0269 18.9629 18.9629 0 0 0 6.1621-1.0269.5.5 0 0 0 .3379-.4731v-1a6.5083 6.5083 0 0 0 -4.461-6.1676 3.5 3.5 0 1 0 -4.078 0 6.5083 6.5083 0 0 0 -4.461 6.1676zm4-9a2.5 2.5 0 1 1 2.5 2.5 2.5026 2.5026 0 0 1 -2.5-2.5zm2.5 3.5a5.5066 5.5066 0 0 1 5.5 5.5v.6392a18.08 18.08 0 0 1 -11 0v-.6392a5.5066 5.5066 0 0 1 5.5-5.5z"></path></svg>
                Data user
              </button>
              <button class="value" id="register-button">
                <svg id="Line" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path fill="#7D8590" id="XMLID_1646_" d="m17.074 30h-2.148c-1.038 0-1.914-.811-1.994-1.846l-.125-1.635c-.687-.208-1.351-.484-1.985-.824l-1.246 1.067c-.788.677-1.98.631-2.715-.104l-1.52-1.52c-.734-.734-.78-1.927-.104-2.715l1.067-1.246c-.34-.635-.616-1.299-.824-1.985l-1.634-.125c-1.035-.079-1.846-.955-1.846-1.993v-2.148c0-1.038.811-1.914 1.846-1.994l1.635-.125c.208-.687.484-1.351.824-1.985l-1.068-1.247c-.676-.788-.631-1.98.104-2.715l1.52-1.52c.734-.734 1.927-.779 2.715-.104l1.246 1.067c.635-.34 1.299-.616 1.985-.824l.125-1.634c.08-1.034.956-1.845 1.994-1.845h2.148c1.038 0 1.914.811 1.994 1.846l.125 1.635c.687.208 1.351.484 1.985.824l1.246-1.067c.787-.676 1.98-.631 2.715.104l1.52 1.52c.734.734.78 1.927.104 2.715l-1.067 1.246c.34.635.616 1.299.824 1.985l1.634.125c1.035.079 1.846.955 1.846 1.993v2.148c0 1.038-.811 1.914-1.846 1.994l-1.635.125c-.208.687-.484 1.351-.824 1.985l1.067 1.246c.677.788.631 1.98-.104 2.715l-1.52 1.52c-.734.734-1.928.78-2.715.104l-1.246-1.067c-.635.34-1.299.616-1.985.824l-.125 1.634c-.079 1.035-.955 1.846-1.993 1.846zm-5.835-6.373c.848.53 1.768.912 2.734 1.135.426.099.739.462.772.898l.18 2.341 2.149-.001.18-2.34c.033-.437.347-.8.772-.898.967-.223 1.887-.604 2.734-1.135.371-.232.849-.197 1.181.089l1.784 1.529 1.52-1.52-1.529-1.784c-.285-.332-.321-.811-.089-1.181.53-.848.912-1.768 1.135-2.734.099-.426.462-.739.898-.772l2.341-.18h-.001v-2.148l-2.34-.18c-.437-.033-.8-.347-.898-.772-.223-.967-.604-1.887-1.135-2.734-.232-.37-.196-.849.089-1.181l1.529-1.784-1.52-1.52-1.784 1.529c-.332.286-.81.321-1.181.089-.848-.53-1.768-.912-2.734-1.135-.426-.099-.739-.462-.772-.898l-.18-2.341-2.148.001-.18 2.34c-.033.437-.347.8-.772.898-.967.223-1.887.604-2.734 1.135-.37.232-.849.197-1.181-.089l-1.785-1.529-1.52 1.52 1.529 1.784c.285.332.321.811.089 1.181-.53.848-.912 1.768-1.135 2.734-.099.426-.462.739-.898.772l-2.341.18.002 2.148 2.34.18c.437.033.8.347.898.772.223.967.604 1.887 1.135 2.734.232.37.196.849-.089 1.181l-1.529 1.784 1.52 1.52 1.784-1.529c.332-.287.813-.32 1.18-.089z"></path><path id="XMLID_1645_" fill="#7D8590" d="m16 23c-3.859 0-7-3.141-7-7s3.141-7 7-7 7 3.141 7 7-3.141 7-7 7zm0-12c-2.757 0-5 2.243-5 5s2.243 5 5 5 5-2.243 5-5-2.243-5-5-5z"></path></svg>
                Register user
              </button> 
              <!-- <button class="value">
                <svg id="svg8" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><g id="layer1" transform="translate(-33.022 -30.617)"><path fill="#7D8590" id="path26276" d="m49.021 31.617c-2.673 0-4.861 2.188-4.861 4.861 0 1.606.798 3.081 1.873 3.834h-7.896c-1.7 0-3.098 1.401-3.098 3.1s1.399 3.098 3.098 3.098h4.377l.223 2.641s-1.764 8.565-1.764 8.566c-.438 1.642.55 3.355 2.191 3.795s3.327-.494 3.799-2.191l2.059-5.189 2.059 5.189c.44 1.643 2.157 2.631 3.799 2.191s2.63-2.153 2.191-3.795l-1.764-8.566.223-2.641h4.377c1.699 0 3.098-1.399 3.098-3.098s-1.397-3.1-3.098-3.1h-7.928c1.102-.771 1.904-2.228 1.904-3.834 0-2.672-2.189-4.861-4.862-4.861zm0 2c1.592 0 2.861 1.27 2.861 2.861 0 1.169-.705 2.214-1.789 2.652-.501.203-.75.767-.563 1.273l.463 1.254c.145.393.519.654.938.654h8.975c.626 0 1.098.473 1.098 1.1s-.471 1.098-1.098 1.098h-5.297c-.52 0-.952.398-.996.916l-.311 3.701c-.008.096-.002.191.018.285 0 0 1.813 8.802 1.816 8.82.162.604-.173 1.186-.777 1.348s-1.184-.173-1.346-.777c-.01-.037-3.063-7.76-3.063-7.76-.334-.842-1.525-.842-1.859 0 0 0-3.052 7.723-3.063 7.76-.162.604-.741.939-1.346.777s-.939-.743-.777-1.348c.004-.019 1.816-8.82 1.816-8.82.02-.094.025-.189.018-.285l-.311-3.701c-.044-.518-.477-.916-.996-.916h-5.297c-.627 0-1.098-.471-1.098-1.098s.472-1.1 1.098-1.1h8.975c.419 0 .793-.262.938-.654l.463-1.254c.188-.507-.062-1.07-.563-1.273-1.084-.438-1.789-1.483-1.789-2.652.001-1.591 1.271-2.861 2.862-2.861z"></path></g></svg>
                Accessibility
              </button>
              <button class="value">
                <svg fill="none" viewBox="0 0 24 25" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m11.9572 4.31201c-3.35401 0-6.00906 2.59741-6.00906 5.67742v3.29037c0 .1986-.05916.3927-.16992.5576l-1.62529 2.4193-.01077.0157c-.18701.2673-.16653.5113-.07001.6868.10031.1825.31959.3528.67282.3528h14.52603c.2546 0 .5013-.1515.6391-.3968.1315-.2343.1117-.4475-.0118-.6093-.0065-.0085-.0129-.0171-.0191-.0258l-1.7269-2.4194c-.121-.1695-.186-.3726-.186-.5809v-3.29037c0-1.54561-.6851-3.023-1.7072-4.00431-1.1617-1.01594-2.6545-1.67311-4.3019-1.67311zm-8.00906 5.67742c0-4.27483 3.64294-7.67742 8.00906-7.67742 2.2055 0 4.1606.88547 5.6378 2.18455.01.00877.0198.01774.0294.02691 1.408 1.34136 2.3419 3.34131 2.3419 5.46596v2.97007l1.5325 2.1471c.6775.8999.6054 1.9859.1552 2.7877-.4464.795-1.3171 1.4177-2.383 1.4177h-14.52603c-2.16218 0-3.55087-2.302-2.24739-4.1777l1.45056-2.1593zm4.05187 11.32257c0-.5523.44772-1 1-1h5.99999c.5523 0 1 .4477 1 1s-.4477 1-1 1h-5.99999c-.55228 0-1-.4477-1-1z" fill="#7D8590" fill-rule="evenodd"></path></svg>
                Notifications
              </button> --!>
            </div>
          </div>
        </li>
        <li class="nav-item profile-desktop">
          <button class="Btn-logout mt-3" id="logoutLink">
            <div class="sign">
              <svg viewBox="0 0 512 512">
                <path
                  d="M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z"
                ></path>
              </svg>
            </div>
            <div class="text">Logout</div>
          </button>
        </li>

        <li class="nav-item profile-mobile">
          <a class="nav-link" id="logoutLink">Logout</a>
        </li>
      `;
    } else if (profile.role === 'Kepala Ruangan') {
      logbookContainer.innerHTML = `
        <li class="nav-item profile-mobile"><a class="nav-link" href="profile/profile.html">My profile</a></li>
        <li class="nav-item profile-mobile"><a class="nav-link" href="logbook.html">Logbook</a></li>
        <li class="nav-item mr-3 profile-desktop" style="position: relative; width:80px; height:80px">
          <button id="profileBtn" class="btn p-0 border-0 bg-transparent">
            <img src="img/profile-icon.png" alt="profile" style="width: 180%; height:180%">
          </button>

          <div class="profile-dropdown" id="profileDropdown">
            <div class="input-profile">
              <button class="value" id="profile-button">
                <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" data-name="Layer 2"><path fill="#7D8590" d="m1.5 13v1a.5.5 0 0 0 .3379.4731 18.9718 18.9718 0 0 0 6.1621 1.0269 18.9629 18.9629 0 0 0 6.1621-1.0269.5.5 0 0 0 .3379-.4731v-1a6.5083 6.5083 0 0 0 -4.461-6.1676 3.5 3.5 0 1 0 -4.078 0 6.5083 6.5083 0 0 0 -4.461 6.1676zm4-9a2.5 2.5 0 1 1 2.5 2.5 2.5026 2.5026 0 0 1 -2.5-2.5zm2.5 3.5a5.5066 5.5066 0 0 1 5.5 5.5v.6392a18.08 18.08 0 0 1 -11 0v-.6392a5.5066 5.5066 0 0 1 5.5-5.5z"></path></svg>
                My profile
              </button>
              <button class="value" id="logbook-button">
                <svg viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg"><path fill="#7D8590" d="m109.9 20.63a6.232 6.232 0 0 0 -8.588-.22l-57.463 51.843c-.012.011-.02.024-.031.035s-.023.017-.034.027l-4.721 4.722a1.749 1.749 0 0 0 0 2.475l.341.342-3.16 3.16a8 8 0 0 0 -1.424 1.967 11.382 11.382 0 0 0 -12.055 10.609c-.006.036-.011.074-.015.111a5.763 5.763 0 0 1 -4.928 5.41 1.75 1.75 0 0 0 -.844 3.14c4.844 3.619 9.4 4.915 13.338 4.915a17.14 17.14 0 0 0 11.738-4.545l.182-.167a11.354 11.354 0 0 0 3.348-8.081c0-.225-.02-.445-.032-.667a8.041 8.041 0 0 0 1.962-1.421l3.16-3.161.342.342a1.749 1.749 0 0 0 2.475 0l4.722-4.722c.011-.011.018-.025.029-.036s.023-.018.033-.029l51.844-57.46a6.236 6.236 0 0 0 -.219-8.589zm-70.1 81.311-.122.111c-.808.787-7.667 6.974-17.826 1.221a9.166 9.166 0 0 0 4.36-7.036 1.758 1.758 0 0 0 .036-.273 7.892 7.892 0 0 1 9.122-7.414c.017.005.031.014.048.019a1.717 1.717 0 0 0 .379.055 7.918 7.918 0 0 1 4 13.317zm5.239-10.131c-.093.093-.194.176-.293.26a11.459 11.459 0 0 0 -6.289-6.286c.084-.1.167-.2.261-.3l3.161-3.161 6.321 6.326zm7.214-4.057-9.479-9.479 2.247-2.247 9.479 9.479zm55.267-60.879-50.61 56.092-9.348-9.348 56.092-50.61a2.737 2.737 0 0 1 3.866 3.866z"></path></svg>
                Logbook
              </button>
              <!-- <button class="value">
                <svg id="Line" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path fill="#7D8590" id="XMLID_1646_" d="m17.074 30h-2.148c-1.038 0-1.914-.811-1.994-1.846l-.125-1.635c-.687-.208-1.351-.484-1.985-.824l-1.246 1.067c-.788.677-1.98.631-2.715-.104l-1.52-1.52c-.734-.734-.78-1.927-.104-2.715l1.067-1.246c-.34-.635-.616-1.299-.824-1.985l-1.634-.125c-1.035-.079-1.846-.955-1.846-1.993v-2.148c0-1.038.811-1.914 1.846-1.994l1.635-.125c.208-.687.484-1.351.824-1.985l-1.068-1.247c-.676-.788-.631-1.98.104-2.715l1.52-1.52c.734-.734 1.927-.779 2.715-.104l1.246 1.067c.635-.34 1.299-.616 1.985-.824l.125-1.634c.08-1.034.956-1.845 1.994-1.845h2.148c1.038 0 1.914.811 1.994 1.846l.125 1.635c.687.208 1.351.484 1.985.824l1.246-1.067c.787-.676 1.98-.631 2.715.104l1.52 1.52c.734.734.78 1.927.104 2.715l-1.067 1.246c.34.635.616 1.299.824 1.985l1.634.125c1.035.079 1.846.955 1.846 1.993v2.148c0 1.038-.811 1.914-1.846 1.994l-1.635.125c-.208.687-.484 1.351-.824 1.985l1.067 1.246c.677.788.631 1.98-.104 2.715l-1.52 1.52c-.734.734-1.928.78-2.715.104l-1.246-1.067c-.635.34-1.299.616-1.985.824l-.125 1.634c-.079 1.035-.955 1.846-1.993 1.846zm-5.835-6.373c.848.53 1.768.912 2.734 1.135.426.099.739.462.772.898l.18 2.341 2.149-.001.18-2.34c.033-.437.347-.8.772-.898.967-.223 1.887-.604 2.734-1.135.371-.232.849-.197 1.181.089l1.784 1.529 1.52-1.52-1.529-1.784c-.285-.332-.321-.811-.089-1.181.53-.848.912-1.768 1.135-2.734.099-.426.462-.739.898-.772l2.341-.18h-.001v-2.148l-2.34-.18c-.437-.033-.8-.347-.898-.772-.223-.967-.604-1.887-1.135-2.734-.232-.37-.196-.849.089-1.181l1.529-1.784-1.52-1.52-1.784 1.529c-.332.286-.81.321-1.181.089-.848-.53-1.768-.912-2.734-1.135-.426-.099-.739-.462-.772-.898l-.18-2.341-2.148.001-.18 2.34c-.033.437-.347.8-.772.898-.967.223-1.887.604-2.734 1.135-.37.232-.849.197-1.181-.089l-1.785-1.529-1.52 1.52 1.529 1.784c.285.332.321.811.089 1.181-.53.848-.912 1.768-1.135 2.734-.099.426-.462.739-.898.772l-2.341.18.002 2.148 2.34.18c.437.033.8.347.898.772.223.967.604 1.887 1.135 2.734.232.37.196.849-.089 1.181l-1.529 1.784 1.52 1.52 1.784-1.529c.332-.287.813-.32 1.18-.089z"></path><path id="XMLID_1645_" fill="#7D8590" d="m16 23c-3.859 0-7-3.141-7-7s3.141-7 7-7 7 3.141 7 7-3.141 7-7 7zm0-12c-2.757 0-5 2.243-5 5s2.243 5 5 5 5-2.243 5-5-2.243-5-5-5z"></path></svg>
                Account
              </button>
              <button class="value">
                <svg id="svg8" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><g id="layer1" transform="translate(-33.022 -30.617)"><path fill="#7D8590" id="path26276" d="m49.021 31.617c-2.673 0-4.861 2.188-4.861 4.861 0 1.606.798 3.081 1.873 3.834h-7.896c-1.7 0-3.098 1.401-3.098 3.1s1.399 3.098 3.098 3.098h4.377l.223 2.641s-1.764 8.565-1.764 8.566c-.438 1.642.55 3.355 2.191 3.795s3.327-.494 3.799-2.191l2.059-5.189 2.059 5.189c.44 1.643 2.157 2.631 3.799 2.191s2.63-2.153 2.191-3.795l-1.764-8.566.223-2.641h4.377c1.699 0 3.098-1.399 3.098-3.098s-1.397-3.1-3.098-3.1h-7.928c1.102-.771 1.904-2.228 1.904-3.834 0-2.672-2.189-4.861-4.862-4.861zm0 2c1.592 0 2.861 1.27 2.861 2.861 0 1.169-.705 2.214-1.789 2.652-.501.203-.75.767-.563 1.273l.463 1.254c.145.393.519.654.938.654h8.975c.626 0 1.098.473 1.098 1.1s-.471 1.098-1.098 1.098h-5.297c-.52 0-.952.398-.996.916l-.311 3.701c-.008.096-.002.191.018.285 0 0 1.813 8.802 1.816 8.82.162.604-.173 1.186-.777 1.348s-1.184-.173-1.346-.777c-.01-.037-3.063-7.76-3.063-7.76-.334-.842-1.525-.842-1.859 0 0 0-3.052 7.723-3.063 7.76-.162.604-.741.939-1.346.777s-.939-.743-.777-1.348c.004-.019 1.816-8.82 1.816-8.82.02-.094.025-.189.018-.285l-.311-3.701c-.044-.518-.477-.916-.996-.916h-5.297c-.627 0-1.098-.471-1.098-1.098s.472-1.1 1.098-1.1h8.975c.419 0 .793-.262.938-.654l.463-1.254c.188-.507-.062-1.07-.563-1.273-1.084-.438-1.789-1.483-1.789-2.652.001-1.591 1.271-2.861 2.862-2.861z"></path></g></svg>
                Accessibility
              </button>
              <button class="value">
                <svg fill="none" viewBox="0 0 24 25" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m11.9572 4.31201c-3.35401 0-6.00906 2.59741-6.00906 5.67742v3.29037c0 .1986-.05916.3927-.16992.5576l-1.62529 2.4193-.01077.0157c-.18701.2673-.16653.5113-.07001.6868.10031.1825.31959.3528.67282.3528h14.52603c.2546 0 .5013-.1515.6391-.3968.1315-.2343.1117-.4475-.0118-.6093-.0065-.0085-.0129-.0171-.0191-.0258l-1.7269-2.4194c-.121-.1695-.186-.3726-.186-.5809v-3.29037c0-1.54561-.6851-3.023-1.7072-4.00431-1.1617-1.01594-2.6545-1.67311-4.3019-1.67311zm-8.00906 5.67742c0-4.27483 3.64294-7.67742 8.00906-7.67742 2.2055 0 4.1606.88547 5.6378 2.18455.01.00877.0198.01774.0294.02691 1.408 1.34136 2.3419 3.34131 2.3419 5.46596v2.97007l1.5325 2.1471c.6775.8999.6054 1.9859.1552 2.7877-.4464.795-1.3171 1.4177-2.383 1.4177h-14.52603c-2.16218 0-3.55087-2.302-2.24739-4.1777l1.45056-2.1593zm4.05187 11.32257c0-.5523.44772-1 1-1h5.99999c.5523 0 1 .4477 1 1s-.4477 1-1 1h-5.99999c-.55228 0-1-.4477-1-1z" fill="#7D8590" fill-rule="evenodd"></path></svg>
                Notifications
              </button> --!>
            </div>
          </div>
        </li>
        <li class="nav-item profile-desktop">
          <button class="Btn-logout mt-3" id="logoutLink">
            <div class="sign">
              <svg viewBox="0 0 512 512">
                <path
                  d="M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z"
                ></path>
              </svg>
            </div>
            <div class="text">Logout</div>
          </button>
        </li>

        <li class="nav-item profile-mobile">
          <a class="nav-link" id="logoutLink">Logout</a>
        </li>
      `;
    } else {
      logbookContainer.innerHTML = `
        <li class="nav-item profile-mobile"><a class="nav-link" href="profile/profile.html">My profile</a></li>
        <li class="nav-item mr-3 profile-desktop" style="position: relative; width:80px; height:80px">
          <button id="profile-button" class="btn p-0 border-0 bg-transparent">
            <img src="img/profile-icon.png" alt="profile" style="width: 180%; height:180%">
          </button>

          <!-- <div class="profile-dropdown" id="profileDropdown">
            <div class="input-profile">
              <button class="value" id="profile-button">
                <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" data-name="Layer 2"><path fill="#7D8590" d="m1.5 13v1a.5.5 0 0 0 .3379.4731 18.9718 18.9718 0 0 0 6.1621 1.0269 18.9629 18.9629 0 0 0 6.1621-1.0269.5.5 0 0 0 .3379-.4731v-1a6.5083 6.5083 0 0 0 -4.461-6.1676 3.5 3.5 0 1 0 -4.078 0 6.5083 6.5083 0 0 0 -4.461 6.1676zm4-9a2.5 2.5 0 1 1 2.5 2.5 2.5026 2.5026 0 0 1 -2.5-2.5zm2.5 3.5a5.5066 5.5066 0 0 1 5.5 5.5v.6392a18.08 18.08 0 0 1 -11 0v-.6392a5.5066 5.5066 0 0 1 5.5-5.5z"></path></svg>
                My profile
              </button>
              <button class="value">
                <svg id="Line" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path fill="#7D8590" id="XMLID_1646_" d="m17.074 30h-2.148c-1.038 0-1.914-.811-1.994-1.846l-.125-1.635c-.687-.208-1.351-.484-1.985-.824l-1.246 1.067c-.788.677-1.98.631-2.715-.104l-1.52-1.52c-.734-.734-.78-1.927-.104-2.715l1.067-1.246c-.34-.635-.616-1.299-.824-1.985l-1.634-.125c-1.035-.079-1.846-.955-1.846-1.993v-2.148c0-1.038.811-1.914 1.846-1.994l1.635-.125c.208-.687.484-1.351.824-1.985l-1.068-1.247c-.676-.788-.631-1.98.104-2.715l1.52-1.52c.734-.734 1.927-.779 2.715-.104l1.246 1.067c.635-.34 1.299-.616 1.985-.824l.125-1.634c.08-1.034.956-1.845 1.994-1.845h2.148c1.038 0 1.914.811 1.994 1.846l.125 1.635c.687.208 1.351.484 1.985.824l1.246-1.067c.787-.676 1.98-.631 2.715.104l1.52 1.52c.734.734.78 1.927.104 2.715l-1.067 1.246c.34.635.616 1.299.824 1.985l1.634.125c1.035.079 1.846.955 1.846 1.993v2.148c0 1.038-.811 1.914-1.846 1.994l-1.635.125c-.208.687-.484 1.351-.824 1.985l1.067 1.246c.677.788.631 1.98-.104 2.715l-1.52 1.52c-.734.734-1.928.78-2.715.104l-1.246-1.067c-.635.34-1.299.616-1.985.824l-.125 1.634c-.079 1.035-.955 1.846-1.993 1.846zm-5.835-6.373c.848.53 1.768.912 2.734 1.135.426.099.739.462.772.898l.18 2.341 2.149-.001.18-2.34c.033-.437.347-.8.772-.898.967-.223 1.887-.604 2.734-1.135.371-.232.849-.197 1.181.089l1.784 1.529 1.52-1.52-1.529-1.784c-.285-.332-.321-.811-.089-1.181.53-.848.912-1.768 1.135-2.734.099-.426.462-.739.898-.772l2.341-.18h-.001v-2.148l-2.34-.18c-.437-.033-.8-.347-.898-.772-.223-.967-.604-1.887-1.135-2.734-.232-.37-.196-.849.089-1.181l1.529-1.784-1.52-1.52-1.784 1.529c-.332.286-.81.321-1.181.089-.848-.53-1.768-.912-2.734-1.135-.426-.099-.739-.462-.772-.898l-.18-2.341-2.148.001-.18 2.34c-.033.437-.347.8-.772.898-.967.223-1.887.604-2.734 1.135-.37.232-.849.197-1.181-.089l-1.785-1.529-1.52 1.52 1.529 1.784c.285.332.321.811.089 1.181-.53.848-.912 1.768-1.135 2.734-.099.426-.462.739-.898.772l-2.341.18.002 2.148 2.34.18c.437.033.8.347.898.772.223.967.604 1.887 1.135 2.734.232.37.196.849-.089 1.181l-1.529 1.784 1.52 1.52 1.784-1.529c.332-.287.813-.32 1.18-.089z"></path><path id="XMLID_1645_" fill="#7D8590" d="m16 23c-3.859 0-7-3.141-7-7s3.141-7 7-7 7 3.141 7 7-3.141 7-7 7zm0-12c-2.757 0-5 2.243-5 5s2.243 5 5 5 5-2.243 5-5-2.243-5-5-5z"></path></svg>
                Account
              </button>
              <button class="value">
                <svg viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg"><path fill="#7D8590" d="m109.9 20.63a6.232 6.232 0 0 0 -8.588-.22l-57.463 51.843c-.012.011-.02.024-.031.035s-.023.017-.034.027l-4.721 4.722a1.749 1.749 0 0 0 0 2.475l.341.342-3.16 3.16a8 8 0 0 0 -1.424 1.967 11.382 11.382 0 0 0 -12.055 10.609c-.006.036-.011.074-.015.111a5.763 5.763 0 0 1 -4.928 5.41 1.75 1.75 0 0 0 -.844 3.14c4.844 3.619 9.4 4.915 13.338 4.915a17.14 17.14 0 0 0 11.738-4.545l.182-.167a11.354 11.354 0 0 0 3.348-8.081c0-.225-.02-.445-.032-.667a8.041 8.041 0 0 0 1.962-1.421l3.16-3.161.342.342a1.749 1.749 0 0 0 2.475 0l4.722-4.722c.011-.011.018-.025.029-.036s.023-.018.033-.029l51.844-57.46a6.236 6.236 0 0 0 -.219-8.589zm-70.1 81.311-.122.111c-.808.787-7.667 6.974-17.826 1.221a9.166 9.166 0 0 0 4.36-7.036 1.758 1.758 0 0 0 .036-.273 7.892 7.892 0 0 1 9.122-7.414c.017.005.031.014.048.019a1.717 1.717 0 0 0 .379.055 7.918 7.918 0 0 1 4 13.317zm5.239-10.131c-.093.093-.194.176-.293.26a11.459 11.459 0 0 0 -6.289-6.286c.084-.1.167-.2.261-.3l3.161-3.161 6.321 6.326zm7.214-4.057-9.479-9.479 2.247-2.247 9.479 9.479zm55.267-60.879-50.61 56.092-9.348-9.348 56.092-50.61a2.737 2.737 0 0 1 3.866 3.866z"></path></svg>
                Logbook
              </button>
              <button class="value">
                <svg id="svg8" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><g id="layer1" transform="translate(-33.022 -30.617)"><path fill="#7D8590" id="path26276" d="m49.021 31.617c-2.673 0-4.861 2.188-4.861 4.861 0 1.606.798 3.081 1.873 3.834h-7.896c-1.7 0-3.098 1.401-3.098 3.1s1.399 3.098 3.098 3.098h4.377l.223 2.641s-1.764 8.565-1.764 8.566c-.438 1.642.55 3.355 2.191 3.795s3.327-.494 3.799-2.191l2.059-5.189 2.059 5.189c.44 1.643 2.157 2.631 3.799 2.191s2.63-2.153 2.191-3.795l-1.764-8.566.223-2.641h4.377c1.699 0 3.098-1.399 3.098-3.098s-1.397-3.1-3.098-3.1h-7.928c1.102-.771 1.904-2.228 1.904-3.834 0-2.672-2.189-4.861-4.862-4.861zm0 2c1.592 0 2.861 1.27 2.861 2.861 0 1.169-.705 2.214-1.789 2.652-.501.203-.75.767-.563 1.273l.463 1.254c.145.393.519.654.938.654h8.975c.626 0 1.098.473 1.098 1.1s-.471 1.098-1.098 1.098h-5.297c-.52 0-.952.398-.996.916l-.311 3.701c-.008.096-.002.191.018.285 0 0 1.813 8.802 1.816 8.82.162.604-.173 1.186-.777 1.348s-1.184-.173-1.346-.777c-.01-.037-3.063-7.76-3.063-7.76-.334-.842-1.525-.842-1.859 0 0 0-3.052 7.723-3.063 7.76-.162.604-.741.939-1.346.777s-.939-.743-.777-1.348c.004-.019 1.816-8.82 1.816-8.82.02-.094.025-.189.018-.285l-.311-3.701c-.044-.518-.477-.916-.996-.916h-5.297c-.627 0-1.098-.471-1.098-1.098s.472-1.1 1.098-1.1h8.975c.419 0 .793-.262.938-.654l.463-1.254c.188-.507-.062-1.07-.563-1.273-1.084-.438-1.789-1.483-1.789-2.652.001-1.591 1.271-2.861 2.862-2.861z"></path></g></svg>
                Accessibility
              </button>
              <button class="value">
                <svg fill="none" viewBox="0 0 24 25" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m11.9572 4.31201c-3.35401 0-6.00906 2.59741-6.00906 5.67742v3.29037c0 .1986-.05916.3927-.16992.5576l-1.62529 2.4193-.01077.0157c-.18701.2673-.16653.5113-.07001.6868.10031.1825.31959.3528.67282.3528h14.52603c.2546 0 .5013-.1515.6391-.3968.1315-.2343.1117-.4475-.0118-.6093-.0065-.0085-.0129-.0171-.0191-.0258l-1.7269-2.4194c-.121-.1695-.186-.3726-.186-.5809v-3.29037c0-1.54561-.6851-3.023-1.7072-4.00431-1.1617-1.01594-2.6545-1.67311-4.3019-1.67311zm-8.00906 5.67742c0-4.27483 3.64294-7.67742 8.00906-7.67742 2.2055 0 4.1606.88547 5.6378 2.18455.01.00877.0198.01774.0294.02691 1.408 1.34136 2.3419 3.34131 2.3419 5.46596v2.97007l1.5325 2.1471c.6775.8999.6054 1.9859.1552 2.7877-.4464.795-1.3171 1.4177-2.383 1.4177h-14.52603c-2.16218 0-3.55087-2.302-2.24739-4.1777l1.45056-2.1593zm4.05187 11.32257c0-.5523.44772-1 1-1h5.99999c.5523 0 1 .4477 1 1s-.4477 1-1 1h-5.99999c-.55228 0-1-.4477-1-1z" fill="#7D8590" fill-rule="evenodd"></path></svg>
                Notifications
              </button>
            </div>
          </div> --!>
        </li>
        <li class="nav-item profile-desktop">
          <button class="Btn-logout mt-3" id="logoutLink">
            <div class="sign">
              <svg viewBox="0 0 512 512">
                <path
                  d="M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z"
                ></path>
              </svg>
            </div>
            <div class="text">Logout</div>
          </button>
        </li>

        <li class="nav-item profile-mobile">
          <a class="nav-link" id="logoutLink">Logout</a>
        </li>
      `;
    }

    if (profile.role === 'super admin') {
      await initSwitchButton();
    }

    async function buttonTelegram() {
      const telegramButton = document.getElementById('telegramButton');
      try {
        const res = await fetchWithAuth('/api/notification', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ username: profile.username })
        });

        const username = profile.username;
  
        if (!res.ok) throw new Error('Gagal memeriksa data Telegram');
  
        const data = await res.json();
  
        // Ubah isi tombol sesuai status
        if (data.linked === true) {
          telegramButton.innerHTML = '';
        } else {
          telegramButton.innerHTML = `
            <h4>Sistem notifikasi telegram</h4>
            <a id="telegram-link" href="https://t.me/rsudtr_bot?start=link:${username}" target="_blank" class="file-btn mb-3">
                Hubungkan Ke Telegram
            </a>
          `;
        }
      } catch (error) {
        console.error('Gagal memuat status Telegram:', error);
      }
    }
  
    async function initSwitchButton() {
      try {
        const registerButton = document.getElementById('register');

        if(profile.role === 'super admin') {
          registerButton.innerHTML = `
          <h4>Formulir Register</h4>
          <div class="checkbox-wrapper-8">
            <input type="checkbox" id="cb3-8" class="tgl tgl-skewed">
            <label for="cb3-8" data-tg-on="AKTIF" data-tg-off="MATI" class="tgl-btn"></label>
          </div>
        `;
        } else {
          registerButton.innerHTML = '';
        }
    
        const switchButton = document.getElementById('cb3-8');
        if (!switchButton) {
          console.error('Switch button tidak ditemukan.');
          return;
        }
    
        const response = await fetch('/api/switch/status-get');
        if (!response.ok) throw new Error('Gagal mengambil status switch dari server');
        
        const data = await response.json();
        // console.log('Status awal dari server:', data.status);
  
        switchButton.checked = data.status;
  
        switchButton.addEventListener('change', async function () {
          const isChecked = switchButton.checked;
          // console.log('Status switch berubah:', isChecked);
    
          try {
            const saveResponse = await fetchWithAuth('/api/switch/status-post', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ status: isChecked })
            });
    
            if (!saveResponse.ok) throw new Error('Gagal menyimpan status switch');
            const result = await saveResponse.json();
            // console.log('Berhasil menyimpan status:', result);
          } catch (saveError) {
            console.error('Error saat menyimpan status:', saveError);
          }
        });
    
      } catch (error) {
        console.error('Error saat inisialisasi switch:', error);
      }
    }

    buttonTelegram();
    initSwitchButton();
    
  } catch (error) {
    console.error('Error fetching profile:', error);
  }


  const profileBtn     = document.getElementById('profileBtn');
  const profileDropdown = document.getElementById('profileDropdown');

  // toggle dropdown
  if(profileBtn) {
    profileBtn.addEventListener('click', function(e) {
      e.preventDefault();
      profileDropdown.style.display = 
        profileDropdown.style.display === 'block' ? 'none' : 'block';
    });
  }

  // tutup kalau klik di luar dropdown
  document.addEventListener('click', function(e) {
    const isClickInside = profileBtn.contains(e.target)
                        || profileDropdown.contains(e.target);
    if (!isClickInside) {
      profileDropdown.style.display = 'none';
    }
  });

  
  function addNavListener (id, url) {
    const el = document.getElementById(id);
    if(el) {
      el.addEventListener('click', function () {
        window.location.href = url;
      })
    }
  }

addNavListener('profile-button', 'profile/profile.html');
addNavListener('logbook-button', 'logbook.html');
addNavListener('user-data-button', 'user.html');
addNavListener('register-button', '../login-form/register.html');

  
  document.getElementById('logoutLink').addEventListener('click', async () => {
    await fetch ('/api/auth/logout', {
      method: 'POST',
      credentials: 'include'
    });
    localStorage.removeItem('accessToken');
    window.location.href = '../login-form/index.html';
  });

  async function fetchTasks() {
    try {
      const res = await fetchWithAuth('/api/workflow/instances');
      if (!res.ok) throw new Error('Gagal mengambil tugas');
      const data = await res.json();
      displayInitiatedTasks(data.initiatedTasks);
      displayAssignedTasks(data.assignedTasks);
      displayRecentTasks(data.recentTasks);
    } catch (error) {
      console.error('Error fetching tasks:', error);
    }
  }

  async function verifUser() {
    try {
      const res = await fetchWithAuth('/api/workflow/verification');
      if (!res.ok) throw new Error('Gagal memuat data verifikasi');
      const data = await res.json();
      displayVerificationUser(data.assignedRows);
    } catch (error) {
      console.error('Error fetching verif tasks: ', error);
    }
  }

  async function displayVerificationUser(tasks) {
    const container = document.getElementById('verifList')
    container.innerHTML = '';

    const user = document.getElementById('role').textContent;

    if (user != 'super admin') {
      $('#register').hide();
      $('#verifList').prev('h3').hide();
      $('#verifList').hide();
    }

    if (tasks.length === 0) {
      container.innerHTML = `
      <h4>Tugas Admin</h4>
      <div class="row">
        <p>Tidak ada user yang perlu di Verifikasi</p>
      </div>
      `
    }

    tasks.forEach(task => {
      const taskEl = document.createElement('div');
      taskEl.className = 'col-md-4 task-item';

      const fieldLabels = {
        username: 'Username',
        namaLengkap: 'Nama Lengkap',
        tempatTanggalLahir: 'Tempat Tanggal Lahir',
        alamat: 'Alamat',
        nik: 'NIK',
        nip: 'NIP',
        pangkat: 'Pangkat',
        Ruang: 'Ruang',
        levelPk: 'Level PK',
        pendidikan: 'Pendidikan',
        noStr: 'Nomor STR',
        akhirStr: 'Expired STR',
        fileStr: 'File STR',
        noSipp: 'Nomor SIPP',
        akhirSipp: 'Expired SIPP',
        fileSipp: 'File SIPP',
        jenisKetenagaan: 'Jenis Ketenagaan'
      };
      
      
      taskEl.innerHTML = `
        <div class="card mb-3" style="color: #767676">
          <div class="card-body">
            <h5 class="card-title">${task.title} (${task.code})</h5>
            <p class="card-text">${task.description}</p>
            <p class="card-text" style="margin-bottom: 0;">
              <small>Data User:</small>
              <div style="max-height: 150px; overflow-y: auto; border: 1px solid #ddd; padding: 8px; border-radius: 4px; background-color: #f8f9fa;">
                <ul style="padding-left: 1.2em; margin-bottom: 0;">
                  ${Object.entries(task.payload).map(([key, value]) => `
                    <li><strong>${fieldLabels[key] || key}</strong>: ${value || '-'}</li>
                  `).join('')}
                </ul>
              </div>
            </p>
            <button class="btn btn-success btn-sm" onclick="processValid(${task.id}, 'setuju')">Setuju</button>
            <button class="btn btn-danger btn-sm" onclick="processValid(${task.id}, 'tolak')">Tolak</button>
          </div>
        </div>
      `;
      container.appendChild(taskEl);
    });
  }

  function displayInitiatedTasks(tasks) {
    const tableBody = document.querySelector('#initiatedTasksTable tbody');
    tableBody.innerHTML = '';
    tasks.forEach((task, index) => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${index + 1}</td>
        <td>${task.code}</td>
        <td>${task.title}</td>
        <td>${task.description}</td>
        <td>${task.status}</td>
      `;
      tableBody.appendChild(row);
    });
  }

  

  // Fungsi untuk mengambil seluruh data staff dari endpoint baru
  async function fetchStaffProfiles() {
    try {
      const res = await fetchWithAuth('/api/auth/staff');
      if (!res.ok) throw new Error('Gagal mengambil data staff');
      const profiles = await res.json();
      // console.log('Data staff:', profiles);
      return profiles;
    } catch (error) {
      console.error('Error fetching staff profiles:', error);
      return [];
    }
  }

  // Fungsi untuk mengambil seluruh data karu dari endpoint baru
  async function fetchKaruProfiles() {
    try {
      const res = await fetchWithAuth('/api/auth/karu');
      if (!res.ok) throw new Error('Gagal mengambil data kepala ruangan');
      const profiles = await res.json();
      // console.log('Data kepala ruangan:', profiles);
      return profiles;
    } catch (error) {
      console.error('Error fetching kepala ruangan profiles:', error);
      return [];
    }
  }



  async function displayAssignedTasks(tasks) {
    const container = document.getElementById('tasksList');
    container.innerHTML = '';
    if (tasks.length === 0) {
      container.innerHTML = '<p>Tidak ada tugas yang ditugaskan kepada Anda.</p>';
    } else {


      // Ambil data staff untuk dropdown dari endpoint baru
      const staffProfiles = await fetchStaffProfiles();
      // console.log(staffProfiles);

      const karuProfiles = await fetchKaruProfiles();
      // console.log(karuProfiles);
    
      tasks.forEach(task => {
        const taskEl = document.createElement('div');
        taskEl.className = 'col-md-4 task-item';
        
        // Tentukan tombol aksi yang akan ditampilkan berdasarkan kondisi
        let buttonsHTML = '';
        if (task.next_step_if_approved === null && task.next_step_if_rejected === null) {
          buttonsHTML += `<button class="btn btn-warning btn-sm" onclick="processTask(${task.id}, 'stop')">Selesaikan</button>`;
        } else {
          if (task.next_step_if_rejected === null) {
            buttonsHTML += `<button class="btn btn-success btn-sm" onclick="processTask(${task.id}, 'approve')">Setuju</button>`;
          } else {
            buttonsHTML += `<button class="btn btn-success btn-sm" onclick="processTask(${task.id}, 'approve')">Setuju</button>
                            <button class="btn btn-danger btn-sm" onclick="processTask(${task.id}, 'reject')">Tolak</button>`;
          }
          if (task.no_need_next_step) {
            buttonsHTML += `<button class="btn btn-warning btn-sm ml-1" onclick="processTask(${task.id}, 'stop')">Selesaikan</button>`;
          }
        }
    
        // Tambahkan link download jika file ada
        let fileDownloadHTML = '';
        if (task.file_path && task.last_step_id) {
          fileDownloadHTML = `<a href="/api/workflow/instance-steps/${task.last_step_id}/file" target="_blank" class="btn btn-info btn-sm">Download File</a>`;
        }
        
        // Buat input pencarian dengan datalist untuk staff
        // Menggunakan id unik per task agar datalist-nya terpisah
        // Tampilkan dropdown hanya jika task.to_role adalah "staff"
        // Ambil step_order saat ini
        const currentStepOrder = task.step_order;
        // console.log('Step order saat ini:', currentStepOrder);
        const nextStepOrder = currentStepOrder + 1; // Hitung step_order berikutnya

        // Lakukan fetch untuk mendapatkan data step berikutnya
        fetchWithAuth(`/api/workflow/steps/${task.workflow_id}/${nextStepOrder}`)
          .then(response => {
            if (response.ok) {
              return response.json();
            } else {
              throw new Error('Step berikutnya tidak ditemukan');
            }
          })
          .then(nextStep => {
            // Ambil nilai to_role dari step berikutnya
            const toRole = nextStep.to_role;
            // console.log('Ini role selanjutnya:', toRole);

            // Bangun dropdownHTML berdasarkan toRole
            let dropdownHTML = '';
            if (toRole === 'Staff') {
              dropdownHTML = `
                <p class="card-text" style="margin-bottom: 0;"><small>Kirim ke</small></p>
                <input type="text" name="assigned_user_name" class="form-control staff-search" placeholder="Cari staff..." list="staffList-${task.id}">
                <datalist id="staffList-${task.id}">
                  ${staffProfiles.map(staff => `<option value="${staff.nama_lengkap}">`).join('')}
                </datalist>
              `;
            }
            else if(toRole === 'Kepala Ruangan') {
              dropdownHTML = `
                <p class="card-text" style="margin-bottom: 0;"><small>Kirim ke</small></p>
                <input type="text" name="assigned_user_name" class="form-control staff-search" placeholder="Cari kepala ruangan..." list="staffList-${task.id}">
                <datalist id="staffList-${task.id}">
                  ${karuProfiles.map(karu => `<option value="${karu.nama_lengkap}">`).join('')}
                </datalist>
              `;
            }

            // Setelah dropdownHTML siap, sisipkan ke dalam innerHTML elemen taskEl
            taskEl.innerHTML = `
              <div class="card mb-3" style="color: #767676">
                <div class="card-body">
                  <h5 class="card-title">${task.title} (${task.code})</h5>
                  <p class="card-text">${task.description}</p>
                  <p class="card-text" style="margin-bottom: 0;"><small>Status: ${task.status}</small></p>
                  <p class="card-text" style="margin-bottom: 0;"><small>Langkah: ${task.current_step_order}</small></p>
                  <p class="card-text"><small>Aksis: ${task.action_description || '-'}</small></p>
                  <form class="mb-2" id="task-form-${task.id}" enctype="multipart/form-data">
                    <input type="hidden" name="instanceId" value="${task.id}">
                    ${dropdownHTML}
                    <label for="fileInput-${task.id}">Upload file (jika diperlukan):</label>
                    <input type="file" name="file" class="form-control" id="fileInput-${task.id}" accept=".pdf,.doc,.docx,.xls,.xlsx">
                  </form>
                  ${buttonsHTML}
                  ${fileDownloadHTML}
                </div>
              </div>
            `;
          })
          .catch(error => {
            // console.log('Tidak ada langkah berikutnya untuk step_order:', currentStepOrder);
            // Jika fetch gagal, kamu bisa memilih untuk tetap merender elemen tanpa dropdown
            taskEl.innerHTML = `
              <div class="card mb-3" style="color: #767676">
                <div class="card-body">
                  <h5 class="card-title">${task.title} (${task.code})</h5>
                  <p class="card-text">${task.description}</p>
                  <p class="card-text" style="margin-bottom: 0;"><small>Status: ${task.status}</small></p>
                  <p class="card-text" style="margin-bottom: 0;"><small>Langkah: ${task.current_step_order}</small></p>
                  <p class="card-text"><small>Aksi: ${task.action_description || '-'}</small></p>
                  <form class="mb-2" id="task-form-${task.id}" enctype="multipart/form-data">
                    <input type="hidden" name="instanceId" value="${task.id}">
                    <label for="fileInput-${task.id}">Upload file (jika diperlukan):</label>
                    <input type="file" name="file" class="form-control" id="fileInput-${task.id}" accept=".pdf,.doc,.docx,.xls,.xlsx">
                  </form>
                  ${buttonsHTML}
                  ${fileDownloadHTML}
                </div>
              </div>
            `;
          });

        container.appendChild(taskEl);
      });
    }
  }
  


  // Render recent tasks (tugas yang telah dikerjakan user atau rekan dengan role yang sama)
  async function displayRecentTasks(tasks) {
    try {
        const profileRes = await fetchWithAuth('/api/auth/profile');

        if (!profileRes.ok) throw new Error('Gagal mengambil data profil');

        const profile = await profileRes.json();
        const currentUser = profile.username;
        const currentRole = profile.role;

        const tableHead = document.querySelector('#recentTasksTable thead')

        if (['Staff', 'Kepala Ruangan'].includes(currentRole)) {
          tableHead.innerHTML = `
            <tr>
            <th>No</th>
            <th>Kode</th>
            <th>Judul</th>
            <th>Deskripsi</th>
            <th>Action</th>
            <th>Waktu</th>
            <th>File</th>
            </tr>
          `
          } else {
          tableHead.innerHTML = `
            <tr>
            <th>No</th>
            <th>Kode</th>
            <th>Judul</th>
            <th>Deskripsi</th>
            <th>Action</th>
            <th>User</th>
            <th>Waktu</th>
            <th>File</th>
            </tr>
          `
          }

        const tableBody = document.querySelector('#recentTasksTable tbody');
        tableBody.innerHTML = ''; // Hapus data lama

        if (['Staff', 'Kepala Ruangan'].includes(role)) {
            tasks.forEach((task, index) => {
                const row = document.createElement('tr');

                // Cek apakah file ada sebelum menampilkan tombol Download
                let fileDownloadHTML = task.file_path
                    ? `<a href="/api/workflow/instance-steps/${task.step_id}/file" target="_blank" class="btn btn-info btn-sm">Download</a>`
                    : `<a>No File</a>`;

                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${task.code}</td>
                    <td>${task.title}</td>
                    <td>${task.description}</td>
                    <td>${task.action_taken}</td>
                    <td>${new Date(task.acted_at).toLocaleString()}</td>
                    <td>${fileDownloadHTML}</td>
                `;

                tableBody.appendChild(row);
            });
        } 
        
        else {
          tasks.forEach((task, index) => {
              const row = document.createElement('tr');

              // Cek apakah file ada sebelum menampilkan tombol Download
              let fileDownloadHTML = task.file_path
                  ? `<a href="/api/workflow/instance-steps/${task.step_id}/file" target="_blank" class="btn btn-info btn-sm">Download</a>`
                  : `<a>No File</a>`;

              row.innerHTML = `
                  <td>${index + 1}</td>
                  <td>${task.code}</td>
                  <td>${task.title}</td>
                  <td>${task.description}</td>
                  <td>${task.action_taken}</td>
                  <td>${task.nama_lengkap}</td>
                  <td>${new Date(task.acted_at).toLocaleString()}</td>
                  <td>${fileDownloadHTML}</td>
              `;

              tableBody.appendChild(row);
          });
        }
        // else {
        //     const filteredTasks = tasks.filter(task => task.username === currentUser);

        //     filteredTasks.forEach((task, index) => {
        //         const row = document.createElement('tr');

        //         let fileDownloadHTML = task.file_path
        //             ? `<a href="/api/workflow/instance-steps/${task.step_id}/file" target="_blank" class="btn btn-info btn-sm">Download</a>`
        //             : `<a>No File</a>`;

        //         row.innerHTML = `
        //             <td>${index + 1}</td>
        //             <td>${task.code}</td>
        //             <td>${task.title}</td>
        //             <td>${task.description}</td>
        //             <td>${task.action_taken}</td>
        //             <td>${task.nama_lengkap}</td>
        //             <td>${new Date(task.acted_at).toLocaleString()}</td>
        //             <td>${fileDownloadHTML}</td>
        //         `;

        //         tableBody.appendChild(row);
        //     });
        // }
    } catch (error) {
        console.error("Terjadi kesalahan:", error);
    }
}

  // Fungsi untuk memproses aksi tugas (approve, reject, atau stop) dengan file upload
  window.processTask = async (instanceId, action) => {
    try {
      const formElement = document.getElementById(`task-form-${instanceId}`);
      const formData = new FormData(formElement);
      formData.append('action', action);
      
      const res = await fetchWithAuth(`/api/workflow/instances/${instanceId}/step`, {
        method: 'POST',
        body: formData
      });
      const result = await res.json();
      alert(result.message);
      fetchTasks();
    } catch (error) {
      console.error('Error processing task:', error);
      alert('Terjadi kesalahan saat memproses tugas.');
    }
  };

  window.processValid = async function(taskId, action) {
    try {
      const res = await fetchWithAuth(`/api/workflow/tasks/${taskId}/step`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ action: action })
      });

      if (!res.ok) throw new Error('Gagal memproses tugas');
      const result = await res.json();
      // console.log('Tugas berhasil diproses:', result);
      await verifUser();
    } catch (error) {
      console.error('Error processing task:', error);
    }
  };


    // Render template workflow untuk inisiasi tugas
    async function displayAvailableTemplates(templates) {
      const container = document.getElementById('availableTasksList');
      container.innerHTML = '';

      const staffProfiles = await fetchStaffProfiles();
      const karuProfiles = await fetchKaruProfiles();

      if (!templates || templates.length === 0) {
        container.innerHTML = '<p>Tidak ada tugas yang dapat diinisiasi untuk peran Anda.</p>';
        return;
      }

      templates.forEach(template => {

        fetchWithAuth(`/api/workflow/steps/${template.workflow_id}/1`)
          .then(response => {
            if (response.ok) {
              return response.json();
            } else {
              throw new Error('Step berikutnya tidak ditemukan');
            }
          })
          .then(nextStep => {
            const toRole = nextStep.to_role;
            // console.log('role selanjutnya dari inisiasi: ', toRole);

            let dropdownInitiate = '';
            if (toRole === 'Staff') {
              dropdownInitiate = `
                <p class="card-text" style="margin-bottom: 0;"><small>Kirim ke</small></p>
                <div class="autocomplete-container" style="position: relative;">
                  <input type="text" name="assigned_user_name" class="form-control staff-search" placeholder="Cari staff..." data-role="staff" data-workflow-id="${template.workflow_id}" autocomplete="off">
                  <div class="autocomplete-results" id="results-${template.workflow_id}" style="position: absolute; z-index: 1000; background: white; width: 100%; border: 1px solid #ccc;"></div>
                </div>
              `;
            }
            else if (toRole === 'Kepala Ruangan') {
            dropdownInitiate = `
              <p class="card-text" style="margin-bottom: 0;"><small>Kirim ke</small></p>
              <div class="autocomplete-container" style="position: relative;">
                <input type="text" name="assigned_user_name" class="form-control staff-search" placeholder="Cari kepala ruangan..." data-role="karu" data-workflow-id="${template.workflow_id}" autocomplete="off">
                <div class="autocomplete-results" id="results-${template.workflow_id}" style="position: absolute; z-index: 1000; background: white; width: 100%; border: 1px solid #ccc;"></div>
              </div>
            `;
            }


            const templateEl = document.createElement('div');
            templateEl.className = 'col-md-4 task-item';
            templateEl.innerHTML = `
              <div class="card mb-3" style="color: #767676">
                <div class="card-body">
                  <h5 class="card-title">${template.title} (${template.code})</h5>
                  <p class="card-text">${template.description}</p>
                  <p class="card-text"><small>Aksi: ${template.action_description}</small></p>
                  <form class="mb-2" id="template-form-${template.workflow_id}" enctype="multipart/form-data">
                    <input type="hidden" name="instanceId" value="${template.workflow_id}">
                    ${dropdownInitiate}
                    <input type="hidden" name="workflow_id" value="${template.workflow_id}">
                    <label for="templateFileInput-${template.workflow_id}">Upload file (jika diperlukan):</label>
                    <input type="file" name="file" class="form-control" id="templateFileInput-${template.workflow_id}" accept=".pdf,.doc,.docx,.xls,.xlsx">
                  </form>
                  <button class="btn btn-primary btn-sm" id="start-btn-${template.workflow_id}" type="button">Mulai Tugas</button>
                </div>
              </div>
            `;
            container.appendChild(templateEl);

            const input = templateEl.querySelector('.staff-search');
            const resultsBox = templateEl.querySelector('.autocomplete-results');

            input.addEventListener('input', () => {
              const query = input.value.toLowerCase();
              const role = input.dataset.role;
              const sourceList = role === 'staff' ? staffProfiles : karuProfiles;

              const filtered = sourceList
                .filter(item => item.nama_lengkap.toLowerCase().includes(query))
                .slice(0, 5); 

              resultsBox.innerHTML = '';
              if (query.length === 0 || filtered.length === 0) return;

              filtered.forEach(item => {
                const div = document.createElement('div');
                div.classList.add('autocomplete-item');
                div.style.padding = '6px 12px';
                div.style.cursor = 'pointer';
                div.textContent = item.nama_lengkap;

                div.addEventListener('click', () => {
                  input.value = item.nama_lengkap;
                  resultsBox.innerHTML = '';
                });

                resultsBox.appendChild(div);
              });
            });

            document.addEventListener('click', (e) => {
              if (!input.contains(e.target) && !resultsBox.contains(e.target)) {
                resultsBox.innerHTML = '';
              }
            });



            // Attach click handler
            const btn = document.getElementById(`start-btn-${template.workflow_id}`);
            btn.addEventListener('click', async () => {
              try {
                const formElement = document.getElementById(`template-form-${template.workflow_id}`);
                const formData = new FormData(formElement);

                const assignedInput = formElement.querySelector('input[name="assigned_user_name"]');
                formData.set('assigned_user_name', assignedInput?.value || '');
                const res = await fetchWithAuth('/api/workflow/instances', {
                  method: 'POST',
                  body: formData
                });
                const result = await res.json();

                if (res.ok) {
                  alert(result.message);
                  // untuk refresh tasklist
                  fetchTasks();
                } else {
                  alert(result.message);
                }
              } catch (error) {
                console.error('Error initiating task:', error);
                alert('Terjadi kesalahan saat menginisiasi tugas.');
              }

              
          });
        })
      });
    }
      
// sudah menambahkan fungsi untuk memberikan value user tertentu jika langkah selanjutnya adalah staff atau karu
// untuk backend nya belum di setting untuk penerimaannya
// uji untuk memastikan tampil dropdown apabila next role adalah karu atau staff sudah di lakukan

  
  // Fungsi untuk mengambil template workflow
  async function fetchAvailableTemplates() {
    try {
      const res = await fetchWithAuth('/api/workflow/templates');
      if (!res.ok) throw new Error('Gagal mengambil template workflow');
      const templates = await res.json();
      displayAvailableTemplates(templates);
    } catch (error) {
      console.error('Error fetching templates:', error);
    }
  }

  // Panggil fungsi untuk mengambil data tugas dan template
  fetchTasks();
  verifUser();
  fetchAvailableTemplates();
});
